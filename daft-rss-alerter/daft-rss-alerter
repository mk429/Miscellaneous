#!/usr/bin/env ruby

require 'set'
require 'simple-rss'
require 'pushover'

DAFT_RSS_URI = 'http://www.daft.ie/rss.daft?uid=<something>&id=<something>&xk=<something>'.freeze
PUSHOVER_USER_KEY = ''.freeze
PUSHOVER_API_KEY = 'aibCYvFD6uyqrmJMX33H4dTEdSPBev'.freeze # leave this as-is, or setup your own Pushover app
SECONDS_BETWEEN_CHECKS = 300

class Ad
  attr_reader :title, :link

  def self.from_rss_items(items)
    items.map do |item|
      new(title: item.title, link: item.link)
    end.to_set
  end

  def initialize(title:, link:)
    @title = title
    @link = link
  end

  def to_s
    "#{title}\n#{link}"
  end

  def eql?(other)
    # We don't care if title changes
    other.is_a?(Ad) && other.link == link
  end

  def hash
    link.hash
  end
end

class DaftRssAlerter
  class << self
    def info(message)
      print "\r[#{Time.now.strftime('%Y-%m-%d %H:%M:%S')}] #{message}"
    end

    def notify(ads)
      ads.each do |ad|
        Pushover.notification(
          user: PUSHOVER_USER_KEY,
          token: PUSHOVER_API_KEY,
          title: 'Daft RSS Alert',
          message: ad.to_s
        )
      end
    end

    def fetch_rss_items!
      xml = open(DAFT_RSS_URI)
      rss = SimpleRSS.parse(xml)
      rss.channel.items
    end

    def main
      info("Watching #{DAFT_RSS_URI} for new properties...\n")
      seen_ads = Ad.from_rss_items(fetch_rss_items!)
      loop do
        sleep SECONDS_BETWEEN_CHECKS
        ads = Ad.from_rss_items(fetch_rss_items!)
        new_ads = ads - seen_ads
        info("Found #{new_ads.length} new properties")
        notify(new_ads)
        seen_ads += ads
      end
    end
  end
end

DaftRssAlerter.main
